generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             String    // <-- change from Int to String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User      @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int       @id @default(autoincrement())
  sessionToken String    @unique
  userId       String    // <-- change from Int to String
  expires      DateTime
  user         User      @relation(fields: [userId], references: [id])
}

model User {
  id               String            @id @default(cuid())
  email            String            @unique
  name             String?
  password         String
  courseSelections CourseSelection?
  accounts         Account[]         // add back relation fields
  sessions         Session[]         // add back relation fields
}

model Course {
  id               String            @id @default(cuid())
  name             String
  description      String
  difficulty       String
  selections       CourseSelection[]
}

model CourseSelection {
  id         String   @id @default(cuid())
  userId     String   @unique
  courseId   String
  selectedAt DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
  course     Course   @relation(fields: [courseId], references: [id])

  @@index([courseId]) // optional for query performance
}